#
# Example .tmux.conf
#
# By Nicholas Marriott. Public domain.
#

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "screen-256color-bce"

# No bells at all
set -g bell-action none

# Lock after 15 minutes
set -g lock-after-time 1800

# Use vi keys
setw -g mode-keys vi

# Turn on xterm-keys so that additional function keys get escape sequences
set -g xterm-keys on

# 0 is too far from ` ;)
set -g base-index 1

# so you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Keep windows around after they exit
#set -g remain-on-exit on

# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -T copy-mode MouseDrag1Pane

# Scroll History
set -g history-limit 30000

# Lower escape timing from 500ms to 50ms for quicker response to 
# scroll-buffer access
set -s escape-time 0

set -g focus-events on
set -g set-clipboard on

# Some extra key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21

# Keys to toggle monitoring activity in a window, and synchronize-panes
bind m set monitor-activity
#bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Keys to hide and show a window name from the status line
bind '-' set window-status-format '#I'\; set window-status-current-format '#I'
bind '=' set window-status-format '#I:#W#F'\; set window-status-current-format '#I:#W#F'

# Changing bindings to split windows
bind | split-window -h -c '#{pane_current_path}'
bind \\ split-window -v -c '#{pane_current_path}'

# Use Alt-arrow keys without prefix key to switch panes

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-left' if-shell "$is_vim" 'send-keys M-left' 'select-pane -L'
bind-key -n 'M-down' if-shell "$is_vim" 'send-keys M-down' 'select-pane -D'
bind-key -n 'M-up' if-shell "$is_vim" 'send-keys M-up' 'select-pane -U'
bind-key -n 'M-right' if-shell "$is_vim" 'send-keys M-right' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -n 'M-Space' if-shell "$is_vim" 'send-keys M-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'M-left' select-pane -L
bind-key -T copy-mode-vi 'M-down' select-pane -D
bind-key -T copy-mode-vi 'M-up' select-pane -U
bind-key -T copy-mode-vi 'M-right' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
bind-key -T copy-mode-vi 'M-Space' select-pane -t:.+


# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Control Shift arrow to move windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# changing the copy-mode-vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle  # default is C-v, or R in copy-mode (non-vi)
bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'
bind p paste-buffer  # default ]
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"


#-------------------------------------------------------#
# Pane colours
#-------------------------------------------------------#
# set active-inactive window styles
#set -g window-style 'fg=colour247,bg=colour236'
#set -g window-active-style 'fg=default,bg=colour234'

set -g window-style 'fg=default,bg=#f3f3f3'
set -g window-active-style 'fg=default,bg=#ffffff'

#set -g window-active-style 'fg=default,bg=default'


# Pane border
#set -g pane-border-bg default
#set -g pane-border-fg colour238

# Active pane border
#set -g pane-active-border-bg default
#set -g pane-active-border-fg blue

#pane border
#set -g pane-border-bg colour235
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour236
#set -g pane-active-border-fg colour51

#-------------------------------------------------------#
# DEFAULT / NORMAL
#set -g window-style 'fg=default,bg=default'
#set -g window-active-style 'fg=default,bg=default'
#-------------------------------------------------------#


# the default shell to bash
set-option -g default-shell "/bin/bash"

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "Tmux config file reloaded."

# powerline
run-shell "powerline-daemon -q"
source "/usr/share/powerline/bindings/tmux/powerline.conf"

# List of plugins
# NOTE: Install plugins with 'prefix + I'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'roxma/vim-tmux-clipboard'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @sidebar-tree-command 'tree -C'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

